<idea-plugin version="2">
    <id>com.bruce.intellijplugin.generatesetter</id>
    <name>GenerateAllSetter</name>
    <vendor email="gejun123456@gmail.com" url="https://github.com/gejun123456/intellij-generateAllSetMethod">bruceGe</vendor>

    <description><![CDATA[
    <p><a href="https://github.com/gejun123456/intellij-generateAllSetMethod">GitHub</a>
      |&nbsp<a href="https://github.com/gejun123456/intellij-generateAllSetMethod/issues">Issues</a></p>

      <p> generate call to class all setter method by alt+enter on the variable class</p>
      <p> generate a converter two object when they have same field</p>
      <p> generate default value when returnType is List Set Map </p>
      <p> like a user class has setName, setPassword methods</p>
      <p> <b>User</b> user = new User();</p>
      <p> then alt+enter on User</p>
      <p> will generate following</p>
      <p> user.setName("");</p>
      <p> user.setPassword("");</p>
      <p> support all your class set method including super class</p>
      <p> view more on <a href ="https://github.com/gejun123456/intellij-generateAllSetMethod">https://github.com/gejun123456/intellij-generateAllSetMethod</a></p>
    ]]></description>

    <change-notes><![CDATA[
    <li>1.9 fix maps import and add default value for some package</li>
    <li>1.8 support byte type</li>
    <li>1.7 support two list convert</li>
    <p>1.6 fix exception when the cursor on constructor method</p>
    <p>1.5 generate default value for returnType is List Set Map</p>
    <p>1.4 could use on method, and if method parameter contain same value, then will pass to it</p>
    <p>1.3 fix doc</p>
    <p>1.2 fix suffix for long and double</p>
    <p>1.1 auto add import</p>
    ]]>
    </change-notes>

    <idea-version since-build="141.0"/>

    <extensions defaultExtensionNs="com.intellij">

        <intentionAction>
            <className>com.ccnode.codegenerator.view.GenerateMethodXmlAction</className>

            <className>com.bruce.intellijplugin.generatesetter.actions.GenerateAllSetterAction</className>

        </intentionAction>
    </extensions>
</idea-plugin>